{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red36\green38\blue41;\red235\green236\blue237;}
{\*\expandedcolortbl;;\cssrgb\c18824\c20000\c21176;\cssrgb\c93725\c94118\c94510;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12600\viewh10200\viewkind0
\deftab720
\pard\pardeftab720\sl300\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 $(function() \{\
  \
  var player = 1;\
  var table = $('table');\
  var messages = $('.messages');\
  var turn = $('.turn');\
  displayNextPlayer(turn, player);\
  \
  $('td').click(function() \{\
    td = $(this);\
    var state = getState(td);\
    if(!state) \{\
      var pattern = definePatternForCurrentPlayer(player);\
      changeState(td, pattern);\
      if(checkIfPlayerWon(table, pattern)) \{\
        messages.html('Player '+player+' has won.');\
        turn.html('');\
      \} else \{\
        player = setNextPlayer(player);\
        displayNextPlayer(turn, player);\
      \}\
    \} else \{\
      messages.html('This box is already checked.');\
    \}\
  \});\
  \
  $('.reset').click(function() \{\
    player = 1;\
    messages.html('');\
    reset(table);\
    displayNextPlayer(turn, player);\
  \});\
  \
\});\
\
function getState(td) \{\
  if(td.hasClass('cross') || td.hasClass('circle')) \{\
    return 1;\
  \} else \{\
    return 0;\
  \}\
\}\
\
function changeState(td, pattern) \{\
  return td.addClass(pattern);\
\}\
\
function definePatternForCurrentPlayer(player) \{\
  if(player == 1) \{\
    return 'cross';\
  \} else \{\
    return 'circle';\
  \}\
\}\
\
function setNextPlayer(player) \{\
  if(player == 1) \{\
    return player = 2;\
  \} else \{\
    return player = 1;\
  \}\
\}\
\
function displayNextPlayer(turn, player) \{\
  turn.html('Player turn : '+player);\
\}\
\
function checkIfPlayerWon(table, pattern) \{\
  var won = 0;\
  if(table.find('.item1').hasClass(pattern) && table.find('.item2').hasClass(pattern) && table.find('.item3').hasClass(pattern)) \{\
    won = 1;\
  \} else if (table.find('.item1').hasClass(pattern) && table.find('.item4').hasClass(pattern) && table.find('.item7').hasClass(pattern)) \{\
    won = 1;\
  \} else if (table.find('.item1').hasClass(pattern) && table.find('.item5').hasClass(pattern) && table.find('.item9').hasClass(pattern)) \{\
    won = 1;\
  \} else if (table.find('.item4').hasClass(pattern) && table.find('.item5').hasClass(pattern) && table.find('.item6').hasClass(pattern)) \{\
    won = 1;\
  \} else if (table.find('.item7').hasClass(pattern) && table.find('.item8').hasClass(pattern) && table.find('.item9').hasClass(pattern)) \{\
    won = 1;\
  \} else if (table.find('.item2').hasClass(pattern) && table.find('.item5').hasClass(pattern) && table.find('.item8').hasClass(pattern)) \{\
    won = 1;\
  \} else if (table.find('.item3').hasClass(pattern) && table.find('.item6').hasClass(pattern) && table.find('.item9').hasClass(pattern)) \{\
    won = 1;\
  \} else if (table.find('.item3').hasClass(pattern) && table.find('.item5').hasClass(pattern) && table.find('.item7').hasClass(pattern)) \{\
    won = 1;\
  \}\
  return won;\
\}\
\
function reset(table) \{\
  table.find('td').each(function() \{\
    $(this).removeClass('circle').removeClass('cross');\
  \});\
\}}